{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Frontend Debug Session State",
  "description": "Schema for persisting debugging session state for crash recovery",
  "type": "object",
  "required": ["session_id", "timestamp_start", "status", "current_phase"],
  "properties": {
    "session_id": {
      "type": "string",
      "description": "Unique session identifier",
      "pattern": "^debug-[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]{6}$"
    },
    "timestamp_start": {
      "type": "string",
      "format": "date-time",
      "description": "Session start timestamp (ISO-8601)"
    },
    "timestamp_last_update": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp (ISO-8601)"
    },
    "status": {
      "type": "string",
      "enum": ["active", "completed", "crashed", "escalated"],
      "description": "Current session status"
    },
    "issue_description": {
      "type": "string",
      "description": "Original issue description provided by user"
    },
    "current_phase": {
      "type": "integer",
      "minimum": 0,
      "maximum": 5,
      "description": "Current workflow phase (0=Init, 1=Investigation, 2=Analysis, 3=Implementation, 4=Verification, 5=Documentation)"
    },
    "browser_config": {
      "type": "object",
      "required": ["user_data_dir", "port", "isolated"],
      "properties": {
        "user_data_dir": {
          "type": "string",
          "description": "Path to temporary user data directory"
        },
        "port": {
          "type": "integer",
          "description": "Browser remote debugging port"
        },
        "isolated": {
          "type": "boolean",
          "description": "Whether browser was launched in isolated mode"
        },
        "headless": {
          "type": "boolean",
          "description": "Whether browser is running in headless mode"
        }
      }
    },
    "project_context": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Project name (e.g., 'SoftTrak')"
        },
        "framework": {
          "type": "string",
          "enum": ["react", "vue", "angular", "vanilla", "other"],
          "description": "Frontend framework detected"
        },
        "is_worktree": {
          "type": "boolean",
          "description": "Whether running in git worktree"
        },
        "worktree_name": {
          "type": "string",
          "description": "Worktree name if applicable"
        }
      }
    },
    "investigation_state": {
      "type": "object",
      "properties": {
        "root_cause_hypothesis": {
          "type": "string",
          "description": "Current working hypothesis for root cause"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Confidence score in current hypothesis"
        },
        "files_involved": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {"type": "string"},
              "lines": {"type": "string"}
            }
          },
          "description": "Files identified as relevant to the issue"
        },
        "console_errors": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Console errors captured"
        },
        "network_failures": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "url": {"type": "string"},
              "status": {"type": "integer"},
              "error": {"type": "string"}
            }
          },
          "description": "Network requests that failed"
        }
      }
    },
    "attempts": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["attempt_number", "fix_description", "result"],
        "properties": {
          "attempt_number": {
            "type": "integer",
            "minimum": 1
          },
          "fix_description": {
            "type": "string",
            "description": "What was attempted"
          },
          "files_modified": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": {"type": "string"},
                "lines": {"type": "string"}
              }
            }
          },
          "result": {
            "type": "string",
            "enum": ["success", "failure"],
            "description": "Outcome of this attempt"
          },
          "reason": {
            "type": "string",
            "description": "Why it succeeded or failed"
          },
          "verification": {
            "type": "object",
            "properties": {
              "ui_state": {"type": "boolean"},
              "console": {"type": "boolean"},
              "network": {"type": "boolean"},
              "interaction": {"type": "boolean"},
              "regression": {"type": "boolean"}
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "description": "History of fix attempts"
    },
    "todos": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["content", "status", "activeForm"],
        "properties": {
          "content": {"type": "string"},
          "status": {
            "type": "string",
            "enum": ["pending", "in_progress", "completed", "blocked"]
          },
          "activeForm": {"type": "string"}
        }
      },
      "description": "TodoWrite task list"
    },
    "artifacts": {
      "type": "object",
      "properties": {
        "screenshots": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Paths to captured screenshots"
        },
        "logs": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Paths to captured logs"
        },
        "snapshots": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Paths to page snapshots"
        },
        "performance_traces": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Paths to performance trace files"
        }
      }
    },
    "escalation": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "enum": [
            "time_limit_exceeded",
            "confidence_critically_low",
            "no_progress",
            "infrastructure_issues",
            "tooling_failures"
          ]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "recommendations": {
          "type": "array",
          "items": {"type": "string"}
        }
      }
    },
    "metrics": {
      "type": "object",
      "properties": {
        "duration_seconds": {
          "type": "integer",
          "description": "Total session duration in seconds"
        },
        "phase_durations": {
          "type": "object",
          "properties": {
            "investigation": {"type": "integer"},
            "analysis": {"type": "integer"},
            "implementation": {"type": "integer"},
            "verification": {"type": "integer"},
            "documentation": {"type": "integer"}
          }
        },
        "iteration_count": {
          "type": "integer",
          "description": "Number of fix attempts"
        },
        "tools_used": {
          "type": "array",
          "items": {"type": "string"},
          "description": "List of tools/MCPs used"
        }
      }
    }
  }
}
