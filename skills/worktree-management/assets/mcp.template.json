{
  "mcpServers": {
    "_comment": "MCP Servers - Docker-based configuration matching global setup",
    "_note": "All MCP servers use Docker containers for isolation and consistency",

    "playwright": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "playwright-mcp",
        "npx",
        "@playwright/mcp"
      ],
      "env": {
        "PLAYWRIGHT_USER_DATA_DIR": "/browser-data/{{WORKTREE_NAME}}/playwright",
        "PLAYWRIGHT_CHROMIUM_DEBUG_PORT": "{{PLAYWRIGHT_PORT}}",
        "PLAYWRIGHT_LAUNCH_OPTIONS": "{\"args\":[\"--remote-debugging-port={{PLAYWRIGHT_PORT}}\",\"--user-data-dir=/browser-data/{{WORKTREE_NAME}}/playwright\",\"--no-first-run\",\"--disable-gpu\"]}"
      }
    },

    "chrome-devtools": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "chrome-devtools-mcp",
        "npx",
        "chrome-devtools-mcp"
      ],
      "env": {
        "CHROME_USER_DATA_DIR": "/browser-data/{{WORKTREE_NAME}}/chrome-devtools",
        "CHROME_REMOTE_DEBUGGING_PORT": "{{CHROME_DEVTOOLS_PORT}}",
        "CHROME_ARGS": "--remote-debugging-port={{CHROME_DEVTOOLS_PORT}} --user-data-dir=/browser-data/{{WORKTREE_NAME}}/chrome-devtools --no-first-run --disable-gpu --disable-dev-shm-usage",
        "CDP_PORT": "{{CHROME_DEVTOOLS_PORT}}"
      }
    },

    "puppeteer": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "puppeteer-mcp",
        "npx",
        "@modelcontextprotocol/server-puppeteer"
      ],
      "env": {
        "PUPPETEER_USER_DATA_DIR": "/browser-data/{{WORKTREE_NAME}}/puppeteer",
        "PUPPETEER_LAUNCH_OPTIONS": "{\"args\":[\"--remote-debugging-port={{PUPPETEER_PORT}}\",\"--user-data-dir=/browser-data/{{WORKTREE_NAME}}/puppeteer\",\"--no-first-run\",\"--disable-gpu\",\"--disable-dev-shm-usage\"],\"dumpio\":false}"
      }
    },

    "sequential-thinking": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "sequential-thinking-mcp",
        "npx",
        "sequential-thinking-mcp"
      ]
    },

    "magic": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "magic-mcp",
        "npx",
        "@21st-dev/magic"
      ]
    },

    "gmail": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "gmail-mcp",
        "gmail-mcp"
      ]
    },

    "context7": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "CONTEXT7_API_KEY=ctx7sk-ef877cec-8c2e-4cee-8c3b-6d666b16ca7d",
        "-e",
        "MCP_TRANSPORT=stdio",
        "context7-mcp:latest"
      ]
    },

    "tavily": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "tavily-mcp",
        "npx",
        "tavily-mcp"
      ]
    },

    "morphllm-fast-apply": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "morphllm-fast-apply-mcp",
        "npx",
        "@morph-llm/morph-fast-apply"
      ]
    },

    "serena": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "serena-mcp",
        "serena-mcp-server"
      ]
    },

    "slack-softtrak": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "slack-mcp",
        "npx",
        "@modelcontextprotocol/server-slack"
      ],
      "env": {
        "SLACK_BOT_TOKEN": "{{SLACK_BOT_TOKEN}}",
        "SLACK_TEAM_ID": "{{SLACK_TEAM_ID}}"
      }
    },

    "asana": {
      "command": "docker",
      "args": [
        "exec",
        "-i",
        "asana-mcp",
        "npx",
        "@roychri/mcp-server-asana"
      ],
      "env": {
        "ASANA_ACCESS_TOKEN": "{{ASANA_ACCESS_TOKEN}}"
      }
    }
  }
}
