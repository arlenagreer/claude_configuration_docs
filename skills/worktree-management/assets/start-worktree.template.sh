#!/bin/bash

# Worktree Startup Script
# Generated by worktree-manager skill
# Worktree: {{WORKTREE_NAME}}
# Branch: {{BRANCH_NAME}}

set -e

WORKTREE_DIR="{{WORKTREE_PATH}}"
MAIN_PROJECT="{{MAIN_PROJECT_PATH}}"

echo "🚀 Starting Worktree: {{WORKTREE_NAME}}"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# Change to worktree directory
cd "$WORKTREE_DIR"

# Check if worktree docker-compose.yml exists
if [ ! -f "docker-compose.worktree.yml" ]; then
  echo "❌ Error: docker-compose.worktree.yml not found"
  echo "   Run: @worktree create {{WORKTREE_NAME}} to regenerate"
  exit 1
fi

echo "📋 Configuration:"
echo "   Main Project: $MAIN_PROJECT"
echo "   Worktree:     $WORKTREE_DIR"
echo "   Branch:       {{BRANCH_NAME}}"
echo ""

echo "🔌 Port Allocations:"
echo "   Backend:        http://localhost:{{BACKEND_PORT}}"
echo "   Frontend:       http://localhost:{{FRONTEND_PORT}}"
echo "   Database:       localhost:{{DB_PORT}}"
echo "   Playwright:     localhost:{{PLAYWRIGHT_PORT}}"
echo "   Chrome DevTools: localhost:{{CHROME_DEVTOOLS_PORT}}"
echo "   Puppeteer:      localhost:{{PUPPETEER_PORT}}"
echo ""

echo "🐳 Starting Docker services..."
echo ""

# Start services using standalone worktree docker-compose file
# No longer uses main project compose files (standalone template)
# Use project name to prevent replacing main project containers
docker-compose \
  -p "softtrak-worktree-{{WORKTREE_NAME}}" \
  -f docker-compose.worktree.yml \
  up -d

echo ""
echo "✅ Services started successfully!"
echo ""

# Wait for database to be ready
echo "⏳ Waiting for database to be ready..."
sleep 3

# Check if database needs initialization
echo "🌱 Checking database initialization status..."
DB_INITIALIZED=$(docker-compose \
  -p "softtrak-worktree-{{WORKTREE_NAME}}" \
  -f docker-compose.worktree.yml \
  exec -T backend rails runner "puts Organization.find_by(global: true) ? 'true' : 'false'" 2>/dev/null || echo "false")

if [ "$DB_INITIALIZED" = "true" ]; then
  echo "  ✓ Database already initialized"
else
  echo "  🔄 Initializing database with production and demo data..."

  # Run migrations (in case they haven't run yet)
  docker-compose \
    -p "softtrak-worktree-{{WORKTREE_NAME}}" \
    -f docker-compose.worktree.yml \
    exec -T backend rails db:migrate

  # Load production + demo data
  docker-compose \
    -p "softtrak-worktree-{{WORKTREE_NAME}}" \
    -f docker-compose.worktree.yml \
    exec -T backend rails db:seed:full_demo

  echo "  ✅ Database initialized successfully!"
fi

echo ""
echo "📊 Service Status:"
docker-compose \
  -p "softtrak-worktree-{{WORKTREE_NAME}}" \
  -f docker-compose.worktree.yml \
  ps

echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "🎯 Ready for development!"
echo ""
echo "🔐 Test Login Credentials:"
echo "   Platform Admin: platform_admin@example.com / Kakellna123!"
echo "   Org Admin:      admin@example.com / Kakellna123!"
echo "   Manager:        sarah.manager@acme.com / Kakellna123!"
echo "   Developer:      mike.dev@acme.com / Kakellna123!"
echo ""
echo "📦 Demo Data Loaded:"
echo "   Organization: Acme Corporation"
echo "   Applications: Slack, GitHub, Office 365, Salesforce, 1Password"
echo "   Departments:  IT, HR, Finance, Sales, Marketing, Engineering"
echo ""
echo "💡 Useful commands:"
echo "   View logs:     docker-compose -p softtrak-worktree-{{WORKTREE_NAME}} -f docker-compose.worktree.yml logs -f"
echo "   Stop services: docker-compose -p softtrak-worktree-{{WORKTREE_NAME}} -f docker-compose.worktree.yml down"
echo "   Restart:       ./start-worktree.sh"
echo "   Rails console: docker-compose -p softtrak-worktree-{{WORKTREE_NAME}} -f docker-compose.worktree.yml exec backend rails console"
echo "   Run seeds:     docker-compose -p softtrak-worktree-{{WORKTREE_NAME}} -f docker-compose.worktree.yml exec backend rails db:seed:full_demo"
echo ""
echo "🚀 To start Claude Code:"
echo "   claude"
echo ""
